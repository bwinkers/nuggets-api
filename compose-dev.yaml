services:
    
  postgres:
    container_name: "${STACKNAME}-nuggets-postgres"
    command: ["postgres", "-c", "log_statement=all"]
    image: "postgres:17-alpine"
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: no
    env_file: .env
    networks:
      - nuggetnet
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgres/data
      - ./postgres:/docker-entrypoint-initdb.d/

  api:
    container_name: "${STACKNAME}-nuggets-api"
    build: ./api
    env_file: .env
    command: ["node", "server.js"]
    restart: no
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nuggetnet
    expose:
      - "3000"
    develop:
      watch:
        - action: sync+restart
          path: ./api
          target: /api
          ignore:
            - .git
            - node_modules/
        - action: rebuild
          path: package.json
  
  proxy:
    container_name: "${STACKNAME}-nuggets-proxy"
    build:
      context: ./proxy/
      args:
        ENABLED_MODULES: brotli subs-filter ndk lua
    image: custom-nginx:v1
    restart: no
    depends_on:
      - api
    networks:
      - nuggetnet
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy/dev/config/:/etc/nginx/conf.d/:ro
      - ./proxy/dev/html/:/var/www/sites/:ro
      - ./proxy/dev/certs/:/etc/ssl/:ro
  
  smtp4dev:
    container_name: "${STACKNAME}-nuggets-smtp4dev"
    image: rnwood/smtp4dev:v3
    restart: no
    env_file: .env
    networks:
      - nuggetnet
    ports:
      - '5000:80'
    expose:
      - '25:25'
      - '143:143'
    volumes:
      # This is where smtp4dev stores the database..
      - smtp4dev:/smtp4dev

volumes:
  smtp4dev: {}
  pgdata: {}

networks:
  nuggetnet:
    external: false
    driver: bridge